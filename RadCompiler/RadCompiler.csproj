<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <UseRidGraph>true</UseRidGraph>
        <!-- â‡§ Deprecated, but needed to support finding the correct LLVM libs per platform. -->
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <!-- If a runtime identifier is not specified, default to win-x64. This is needed for restoring libLLVM packages. -->
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">win-x64</RuntimeIdentifier>
        <Configurations>Debug;Release</Configurations>
        <Platforms>AnyCPU</Platforms>
        <LangVersion>11</LangVersion>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="..\RadParser\RadParser.csproj"/>
        <ProjectReference Include="..\RadProject\RadProject.csproj"/>
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="libLLVM"
                          Version="14.0.0"/>
        <PackageReference Include="LLVMSharp"
                          Version="14.0.0-beta1"/>
    </ItemGroup>
    <!-- Copy the correct runtime support DLLs to the output directory, depending on the target platform. There should be
          both a dynamic and a static library for each platform. The dynamic library is used for runtime linking, and the
          static library is used for AOT compilation. To that end, the we'll use the dynamic library in cases where we're
          running the problem in a JIT environment, like during development, whereas we'll use the static library when
          we're compiling the end-user's code in an AOT environment to produce a binary. The runtime library, in general,
          is used to support certain primitive operations of the language's standard library, like printing to the console,
          reading from the console, timers, etc. -->
    <Target Name="Copy Runtime DLLs"
            AfterTargets="Build;AfterPublish">
        <Message Text="Copying Runtime Support DLLs"
                 Importance="High"/>
        <!-- If we're on Linux copy the `libRadLib.so` runtime dynamic library file. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-unix\libRadLib.so"
              DestinationFolder="$(OutDir)"
              SkipUnchangedFiles="false"
              Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' "/>
        <!-- If we're on macOS copy the `libRadLib.dylib` runtime dynamic library file. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-unix\libRadLib.dylib"
              DestinationFolder="$(OutDir)"
              SkipUnchangedFiles="false"
              Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' "/>
        <!-- If we're on a Unix-like system (Mac or Linux, for instance) copy the `libRadLibStatic.a` runtime static library file. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-unix\libRadLibStatic.a"
              DestinationFolder="$(OutDir)"
              SkipUnchangedFiles="false"
              Condition="'$(OS)' == 'Unix'"/>
        <!-- If we're on Windows copy the `RadLib.dll` runtime dynamic library file. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-windows-x64\$(Configuration)\RadLib.dll"
              DestinationFolder="$(OutDir)"
              SkipUnchangedFiles="false"
              Condition="'$(OS)' == 'Windows_NT'"/>
        <!-- If we're on Windows copy the `RadLibStatic.lib` runtime static library file. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-windows-x64\$(Configuration)\RadLibStatic.lib"
              DestinationFolder="$(OutDir)"
              SkipUnchangedFiles="false"
              Condition="'$(OS)' == 'Windows_NT'"/>
        <!-- Make a directory for the runtime libraries generated specifically for Emscripten. -->
        <MakeDir Directories="$(OutDir)/libs/toolchains/emcc/"/>
        <!-- Copy the `libRadLib.a` runtime static library for Emscripten. -->
        <Copy SourceFiles="$(SolutionDir)RadLib\cmake-build-emscripten\libRadLib.a"
              DestinationFolder="$(OutDir)/libs/toolchains/emcc/"
              SkipUnchangedFiles="false"/>
    </Target>
</Project>