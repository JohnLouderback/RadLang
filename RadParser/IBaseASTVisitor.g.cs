/// This file is generated by `BaseASTVisitor.tt`. Please do not edit directly as it will be overwritten.

namespace RadParser.AST.Node;

public interface IBaseASTVisitor {
  void Visit(BinaryOperation node);

  void Visit(DeclaratorKeyword node);

  void Visit(FunctionCallExpression node);

  void Visit(FunctionDeclaration node);

  void Visit(FunctionScope node);

  void Visit(FunctionScopeStatement node);

  void Visit(LiteralExpression node);

  void Visit(Modifier node);

  void Visit(Module node);

  void Visit(NamedTypeParameter node);

  void Visit(NumericLiteral node);

  void Visit(OperationalKeyword node);

  void Visit(Operator node);

  void Visit(PositionalParameter node);

  void Visit(Reference node);

  void Visit(ReferenceExpression node);

  void Visit(Statement node);

  void Visit(TopLevel node);

  void Visit(TypeIdentifier node);

  void Visit(TypeReference node);

  void Visit(Value node);

  void Visit(Void node);

  void Visit(Expression node);
  void Visit(Declaration node);
  void Visit(Literal node);
  void Visit(IReference<Identifier> node);
  void Visit(Identifier node);

  public void Visit(INode node) {
    Visit((dynamic)node);
  }
}
