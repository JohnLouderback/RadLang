//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/John/Projects/RadLang/RadLexer\Rad.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RadLexer {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Rad"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IRadListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRule([NotNull] Rad.StartRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRule([NotNull] Rad.StartRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.topLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevel([NotNull] Rad.TopLevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.topLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevel([NotNull] Rad.TopLevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] Rad.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] Rad.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] Rad.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] Rad.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.returnTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnTypeSpecifier([NotNull] Rad.ReturnTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.returnTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnTypeSpecifier([NotNull] Rad.ReturnTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] Rad.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] Rad.TypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.voidSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoidSpecifier([NotNull] Rad.VoidSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.voidSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoidSpecifier([NotNull] Rad.VoidSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] Rad.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] Rad.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] Rad.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] Rad.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.namedTypeTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedTypeTuple([NotNull] Rad.NamedTypeTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.namedTypeTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedTypeTuple([NotNull] Rad.NamedTypeTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.namedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedParameters([NotNull] Rad.NamedParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.namedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedParameters([NotNull] Rad.NamedParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.namedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedParameter([NotNull] Rad.NamedParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.namedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedParameter([NotNull] Rad.NamedParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.orderedTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderedTuple([NotNull] Rad.OrderedTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.orderedTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderedTuple([NotNull] Rad.OrderedTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.orderedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderedParameters([NotNull] Rad.OrderedParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.orderedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderedParameters([NotNull] Rad.OrderedParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.orderedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderedParameter([NotNull] Rad.OrderedParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.orderedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderedParameter([NotNull] Rad.OrderedParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.statementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementGroup([NotNull] Rad.StatementGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.statementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementGroup([NotNull] Rad.StatementGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.numberType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberType([NotNull] Rad.NumberTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.numberType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberType([NotNull] Rad.NumberTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.statementKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementKeyword([NotNull] Rad.StatementKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.statementKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementKeyword([NotNull] Rad.StatementKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.definiteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefiniteStatement([NotNull] Rad.DefiniteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.definiteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefiniteStatement([NotNull] Rad.DefiniteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] Rad.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] Rad.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.binaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryOperator([NotNull] Rad.BinaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.binaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryOperator([NotNull] Rad.BinaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] Rad.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] Rad.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericLiteral([NotNull] Rad.NumericLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericLiteral([NotNull] Rad.NumericLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Rad.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] Rad.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Rad.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] Rad.StringLiteralContext context);
}
} // namespace RadLexer
