//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\John\Projects\RadLang\RadLexer\RadLexer.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RadLexer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public partial class RadLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		FN=1, VOID=2, UNSIGNED=3, INT_KEYWORD=4, FLOAT_KEYWORD=5, BOOL_KEYWORD=6, 
		RETURN=7, OUT=8, ID=9, FLAG=10, LPAREN=11, RPAREN=12, LCURL=13, RCURL=14, 
		DQUOTE=15, SQUOTE=16, COMMA=17, SEMICOLON=18, COLON=19, THEN=20, STAR=21, 
		PLUS=22, MINUS=23, FSLASH=24, NUMBER=25, WHITESPACE=26, NEWLINE=27, MULT_LINE_COMMENT=28, 
		DOC_COMMENT=29, LINE_COMMENT=30;
	public const int
		WHITESPACE_CHANNEL=2, COMMENTS_CHANNEL=3;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WHITESPACE_CHANNEL", "COMMENTS_CHANNEL"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "FN", "VOID", "UNSIGNED", "INT_KEYWORD", "FLOAT_KEYWORD", 
		"BOOL_KEYWORD", "RETURN", "OUT", "ID", "FLAG", "LPAREN", "RPAREN", "LCURL", 
		"RCURL", "DQUOTE", "SQUOTE", "COMMA", "SEMICOLON", "COLON", "THEN", "STAR", 
		"PLUS", "MINUS", "FSLASH", "NUMBER", "WHITESPACE", "NEWLINE", "MULT_LINE_COMMENT", 
		"DOC_COMMENT", "LINE_COMMENT"
	};


	public RadLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public RadLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'fn'", "'void'", "'unsigned'", null, null, "'bool'", "'return'", 
		"'out'", null, null, "'('", "')'", "'{'", "'}'", "'\"'", "'''", "','", 
		"';'", "':'", "'=>'", "'*'", "'+'", "'-'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "FN", "VOID", "UNSIGNED", "INT_KEYWORD", "FLOAT_KEYWORD", "BOOL_KEYWORD", 
		"RETURN", "OUT", "ID", "FLAG", "LPAREN", "RPAREN", "LCURL", "RCURL", "DQUOTE", 
		"SQUOTE", "COMMA", "SEMICOLON", "COLON", "THEN", "STAR", "PLUS", "MINUS", 
		"FSLASH", "NUMBER", "WHITESPACE", "NEWLINE", "MULT_LINE_COMMENT", "DOC_COMMENT", 
		"LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "RadLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static RadLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,30,257,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,
		1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
		5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,107,8,5,
		1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
		6,1,6,1,6,1,6,3,6,130,8,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,
		1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,4,10,151,8,10,11,10,12,10,152,1,10,
		1,10,1,10,1,10,5,10,159,8,10,10,10,12,10,162,9,10,1,11,4,11,165,8,11,11,
		11,12,11,166,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,
		17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,
		24,1,24,1,25,1,25,1,26,4,26,199,8,26,11,26,12,26,200,1,27,4,27,204,8,27,
		11,27,12,27,205,1,27,1,27,1,28,3,28,211,8,28,1,28,1,28,4,28,215,8,28,11,
		28,12,28,216,1,28,1,28,1,29,1,29,1,29,1,29,5,29,225,8,29,10,29,12,29,228,
		9,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,5,30,240,8,30,10,
		30,12,30,243,9,30,1,30,1,30,1,31,1,31,1,31,1,31,5,31,251,8,31,10,31,12,
		31,254,9,31,1,31,1,31,1,226,0,32,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,
		7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,
		43,20,45,21,47,22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,1,0,
		5,1,0,97,122,1,0,65,90,1,0,48,57,2,0,9,9,32,32,2,0,10,10,13,13,280,0,5,
		1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
		0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,1,65,1,0,0,0,3,67,1,0,0,0,5,69,1,0,0,0,7,72,
		1,0,0,0,9,77,1,0,0,0,11,106,1,0,0,0,13,129,1,0,0,0,15,131,1,0,0,0,17,136,
		1,0,0,0,19,143,1,0,0,0,21,150,1,0,0,0,23,164,1,0,0,0,25,168,1,0,0,0,27,
		170,1,0,0,0,29,172,1,0,0,0,31,174,1,0,0,0,33,176,1,0,0,0,35,178,1,0,0,
		0,37,180,1,0,0,0,39,182,1,0,0,0,41,184,1,0,0,0,43,186,1,0,0,0,45,189,1,
		0,0,0,47,191,1,0,0,0,49,193,1,0,0,0,51,195,1,0,0,0,53,198,1,0,0,0,55,203,
		1,0,0,0,57,214,1,0,0,0,59,220,1,0,0,0,61,234,1,0,0,0,63,246,1,0,0,0,65,
		66,7,0,0,0,66,2,1,0,0,0,67,68,7,1,0,0,68,4,1,0,0,0,69,70,5,102,0,0,70,
		71,5,110,0,0,71,6,1,0,0,0,72,73,5,118,0,0,73,74,5,111,0,0,74,75,5,105,
		0,0,75,76,5,100,0,0,76,8,1,0,0,0,77,78,5,117,0,0,78,79,5,110,0,0,79,80,
		5,115,0,0,80,81,5,105,0,0,81,82,5,103,0,0,82,83,5,110,0,0,83,84,5,101,
		0,0,84,85,5,100,0,0,85,10,1,0,0,0,86,87,5,105,0,0,87,88,5,110,0,0,88,107,
		5,116,0,0,89,90,5,98,0,0,90,91,5,121,0,0,91,92,5,116,0,0,92,107,5,101,
		0,0,93,94,5,105,0,0,94,95,5,49,0,0,95,107,5,54,0,0,96,97,5,105,0,0,97,
		98,5,51,0,0,98,107,5,50,0,0,99,100,5,105,0,0,100,101,5,54,0,0,101,107,
		5,52,0,0,102,103,5,105,0,0,103,104,5,49,0,0,104,105,5,50,0,0,105,107,5,
		56,0,0,106,86,1,0,0,0,106,89,1,0,0,0,106,93,1,0,0,0,106,96,1,0,0,0,106,
		99,1,0,0,0,106,102,1,0,0,0,107,12,1,0,0,0,108,109,5,102,0,0,109,110,5,
		108,0,0,110,111,5,111,0,0,111,112,5,97,0,0,112,130,5,116,0,0,113,114,5,
		102,0,0,114,115,5,49,0,0,115,130,5,54,0,0,116,117,5,102,0,0,117,118,5,
		51,0,0,118,130,5,50,0,0,119,120,5,102,0,0,120,121,5,54,0,0,121,130,5,52,
		0,0,122,123,5,102,0,0,123,124,5,56,0,0,124,130,5,48,0,0,125,126,5,102,
		0,0,126,127,5,49,0,0,127,128,5,50,0,0,128,130,5,56,0,0,129,108,1,0,0,0,
		129,113,1,0,0,0,129,116,1,0,0,0,129,119,1,0,0,0,129,122,1,0,0,0,129,125,
		1,0,0,0,130,14,1,0,0,0,131,132,5,98,0,0,132,133,5,111,0,0,133,134,5,111,
		0,0,134,135,5,108,0,0,135,16,1,0,0,0,136,137,5,114,0,0,137,138,5,101,0,
		0,138,139,5,116,0,0,139,140,5,117,0,0,140,141,5,114,0,0,141,142,5,110,
		0,0,142,18,1,0,0,0,143,144,5,111,0,0,144,145,5,117,0,0,145,146,5,116,0,
		0,146,20,1,0,0,0,147,151,3,23,11,0,148,151,3,1,0,0,149,151,3,3,1,0,150,
		147,1,0,0,0,150,148,1,0,0,0,150,149,1,0,0,0,151,152,1,0,0,0,152,150,1,
		0,0,0,152,153,1,0,0,0,153,160,1,0,0,0,154,159,3,1,0,0,155,159,3,3,1,0,
		156,159,3,53,26,0,157,159,5,45,0,0,158,154,1,0,0,0,158,155,1,0,0,0,158,
		156,1,0,0,0,158,157,1,0,0,0,159,162,1,0,0,0,160,158,1,0,0,0,160,161,1,
		0,0,0,161,22,1,0,0,0,162,160,1,0,0,0,163,165,3,1,0,0,164,163,1,0,0,0,165,
		166,1,0,0,0,166,164,1,0,0,0,166,167,1,0,0,0,167,24,1,0,0,0,168,169,5,40,
		0,0,169,26,1,0,0,0,170,171,5,41,0,0,171,28,1,0,0,0,172,173,5,123,0,0,173,
		30,1,0,0,0,174,175,5,125,0,0,175,32,1,0,0,0,176,177,5,34,0,0,177,34,1,
		0,0,0,178,179,5,39,0,0,179,36,1,0,0,0,180,181,5,44,0,0,181,38,1,0,0,0,
		182,183,5,59,0,0,183,40,1,0,0,0,184,185,5,58,0,0,185,42,1,0,0,0,186,187,
		5,61,0,0,187,188,5,62,0,0,188,44,1,0,0,0,189,190,5,42,0,0,190,46,1,0,0,
		0,191,192,5,43,0,0,192,48,1,0,0,0,193,194,5,45,0,0,194,50,1,0,0,0,195,
		196,5,47,0,0,196,52,1,0,0,0,197,199,7,2,0,0,198,197,1,0,0,0,199,200,1,
		0,0,0,200,198,1,0,0,0,200,201,1,0,0,0,201,54,1,0,0,0,202,204,7,3,0,0,203,
		202,1,0,0,0,204,205,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,207,1,
		0,0,0,207,208,6,27,0,0,208,56,1,0,0,0,209,211,5,13,0,0,210,209,1,0,0,0,
		210,211,1,0,0,0,211,212,1,0,0,0,212,215,5,10,0,0,213,215,5,13,0,0,214,
		210,1,0,0,0,214,213,1,0,0,0,215,216,1,0,0,0,216,214,1,0,0,0,216,217,1,
		0,0,0,217,218,1,0,0,0,218,219,6,28,0,0,219,58,1,0,0,0,220,221,5,47,0,0,
		221,222,5,42,0,0,222,226,1,0,0,0,223,225,9,0,0,0,224,223,1,0,0,0,225,228,
		1,0,0,0,226,227,1,0,0,0,226,224,1,0,0,0,227,229,1,0,0,0,228,226,1,0,0,
		0,229,230,5,42,0,0,230,231,5,47,0,0,231,232,1,0,0,0,232,233,6,29,1,0,233,
		60,1,0,0,0,234,235,5,47,0,0,235,236,5,47,0,0,236,237,5,47,0,0,237,241,
		1,0,0,0,238,240,8,4,0,0,239,238,1,0,0,0,240,243,1,0,0,0,241,239,1,0,0,
		0,241,242,1,0,0,0,242,244,1,0,0,0,243,241,1,0,0,0,244,245,6,30,1,0,245,
		62,1,0,0,0,246,247,5,47,0,0,247,248,5,47,0,0,248,252,1,0,0,0,249,251,8,
		4,0,0,250,249,1,0,0,0,251,254,1,0,0,0,252,250,1,0,0,0,252,253,1,0,0,0,
		253,255,1,0,0,0,254,252,1,0,0,0,255,256,6,31,1,0,256,64,1,0,0,0,16,0,106,
		129,150,152,158,160,166,200,205,210,214,216,226,241,252,2,0,2,0,0,3,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace RadLexer
